# Generated by Django 5.0 on 2024-09-17 20:05

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Baggage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('baggage_en', models.CharField(max_length=100, null=True)),
                ('baggage_ru', models.CharField(max_length=100, null=True)),
                ('survival_points', models.PositiveIntegerField(default=0, verbose_name='Очки выживания')),
                ('breeding_points', models.IntegerField(default=0, verbose_name='Очки размножения')),
            ],
        ),
        migrations.CreateModel(
            name='Characteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristic', models.CharField(max_length=150, verbose_name='Характеристика')),
                ('description', models.TextField(verbose_name='Описание характеристики')),
                ('image', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d', verbose_name='Пример характеристики')),
            ],
        ),
        migrations.CreateModel(
            name='Disasters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disaster_en', models.CharField(max_length=250, null=True)),
                ('disaster_ru', models.CharField(max_length=250, null=True)),
                ('slug', models.SlugField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fact_en', models.CharField(max_length=250, null=True)),
                ('fact_ru', models.CharField(max_length=250, null=True)),
                ('survival_points', models.IntegerField(default=0, verbose_name='Очки выживания')),
                ('breeding_points', models.IntegerField(default=0, verbose_name='Очки размножения')),
            ],
        ),
        migrations.CreateModel(
            name='Health',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_en', models.CharField(max_length=100, null=True)),
                ('health_ru', models.CharField(max_length=100, null=True)),
                ('infected', models.BooleanField(default=False, verbose_name='Заражаемая')),
                ('with_stage', models.BooleanField(default=False, verbose_name='Со стадией')),
                ('fatal', models.BooleanField(default=False, verbose_name='Смертельная')),
                ('breeding_points', models.IntegerField(default=0, verbose_name='Очки размножения')),
            ],
        ),
        migrations.CreateModel(
            name='Hobbii',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hobbii_en', models.CharField(max_length=100, null=True)),
                ('hobbii_ru', models.CharField(max_length=100, null=True)),
                ('survival_points', models.PositiveIntegerField(default=0, verbose_name='Очки выживания')),
            ],
        ),
        migrations.CreateModel(
            name='Information1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, null=True, verbose_name='Заголовок')),
                ('info', models.TextField(null=True, verbose_name='Информация')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('url_name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Phobia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phobia_en', models.CharField(max_length=100, null=True)),
                ('phobia_ru', models.CharField(max_length=100, null=True)),
                ('fatal', models.BooleanField(default=False, verbose_name='Смертельная')),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession_en', models.CharField(max_length=100, null=True)),
                ('profession_ru', models.CharField(max_length=100, null=True)),
                ('survival_points', models.IntegerField(default=0, verbose_name='Очки выживания')),
                ('breeding_points', models.IntegerField(default=0, verbose_name='Очки размножения')),
            ],
        ),
        migrations.CreateModel(
            name='Rules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, null=True, verbose_name='Заголовок')),
                ('info', models.TextField(null=True, verbose_name='Описание')),
            ],
        ),
        migrations.CreateModel(
            name='MemberCharact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Имя игрока')),
                ('sex', models.CharField(choices=[('Man', 'Мужик'), ('Woman', 'Женщина'), ('Man barren', 'Мужчина бесплодный'), ('Woman barren', 'Женщина бесплодная')], max_length=100, null=True, verbose_name='Пол')),
                ('age', models.PositiveIntegerField(null=True, verbose_name='Возраст')),
                ('stage', models.PositiveIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(100, message='Значение должно быть меньше или равно 100')], verbose_name='Стадия')),
                ('infection', models.CharField(max_length=250, null=True, verbose_name='Заражения')),
                ('alive', models.BooleanField(default=True, verbose_name='Живой')),
                ('session_key', models.CharField(max_length=150, null=True)),
                ('baggage', models.ForeignKey(max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='baggage', to='bunker_app.baggage', verbose_name='Багаж')),
                ('fact_1', models.ForeignKey(max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fact_1', to='bunker_app.fact', verbose_name='Факт-1')),
                ('fact_2', models.ForeignKey(max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fact_2', to='bunker_app.fact', verbose_name='Факт-2')),
                ('health', models.ForeignKey(max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='health', to='bunker_app.health', verbose_name='Здоровье')),
                ('hobbii', models.ForeignKey(max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hobbii', to='bunker_app.hobbii', verbose_name='Хобби')),
                ('phobia', models.ForeignKey(max_length=250, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='phobia', to='bunker_app.phobia', verbose_name='Фобия')),
                ('profession', models.ForeignKey(max_length=100, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profession', to='bunker_app.profession', verbose_name='Профессия')),
            ],
            options={
                'verbose_name': 'Информация об игроках',
                'verbose_name_plural': 'Информация об игроках',
            },
        ),
    ]
